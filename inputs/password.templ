package inputs

type PasswordReq struct {
	minLength          int
	uppercase          bool
	lowercase          bool
	digit              bool
	specialChar        bool
	specialCharPattern string
}

type PasswordReqFunc func(r *PasswordReq)

const specialCharPattern = `[!@#$%^&*()_+\-=<>;:?\/\[\]{}\\|~]`

func minPasswordReq() PasswordReq {
	return PasswordReq{
		minLength:          6,
		uppercase:          false,
		lowercase:          false,
		digit:              false,
		specialChar:        false,
		specialCharPattern: specialCharPattern,
	}
}

var DefaultPasswordReq = PasswordReq{
	minLength:          8,
	uppercase:          true,
	lowercase:          true,
	digit:              true,
	specialChar:        true,
	specialCharPattern: specialCharPattern,
}

func SetPassMinLength(min int) PasswordReqFunc {
	return func(r *PassowrdReq) {
		r.minLength = min
	}
}

func Uppercase(r *PasswordReq) {
	r.uppercase = true
}

func CustomPassReq(opts ...PasswordReqFunc) PasswordReq {
	req := minPasswordReq()

	for _, fn := range opts {
		fn(&req)
	}

	return req
}
