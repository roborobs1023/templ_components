// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package inputs

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/roborobs1023/templ_components/internal/utils"

type InputOpts struct {
	ID          string
	Name        string
	Type        InputType
	Value       string
	Label       string
	Placeholder string

	Required  bool
	Disabled  bool
	Readonly  bool
	Autofocus bool
	Multiple  bool

	Autocomplete string
	Spellcheck   bool
	Tabindex     int
	Form         string
	Attrs        templ.Attributes
	Class        string
	addressProps

	dateProps
	timeProps
	emailProps
	numberProps
	optionProps
	PasswordReq
	phoneProps
	textProps
	textareaProps
}

type InputType string

func (t InputType) String() string {
	return string(t)
}

const (
	ADDRESS     InputType = "address"
	CHECKBOX              = "checkbox"
	COLOR                 = "color"
	DATE                  = "date"
	DATETIME              = "datetime-local"
	EMAIL                 = "email"
	FILE                  = "file"
	HIDDEN                = "hidden" // Used for inputs that need not be visible but value needs to be submitted with form.
	IMAGE                 = "image"
	MONTH                 = "month"
	NEWPASSWORD           = "new-password"
	NUMBER                = "number"
	PASSWORD              = "password"
	PHONE                 = "tel"
	RADIO                 = "radio"
	RANGE                 = "range"
	SEARCH                = "search"
	SELECT                = "select"
	TEXT                  = "text"
	TIME                  = "time"
	URL                   = "url"
	WEEK                  = "week"
)

type InputOptsFunc func(p *InputOpts)

func NewInput(label, name string, inputType string, opts ...InputOptsFunc) {

	p := InputOpts{
		ID:    utils.NewID(name),
		Name:  name,
		Label: label,
		Type:  InputType(inputType),
	}

	for _, fn := range opts {
		fn(&p)
	}

	// switch p.Type {
	// case ADDRESS:
	// case CHCECKBOX:
	// case COLOR:
	// case DATE:
	// case DATETIME:
	// case EMAIL:
	// case FILE:
	// case HIDDEN:
	// case IMAGE:
	// case MONTH:
	// case NEWPASSWORD:
	// case NUMBER:
	// case PASSWORD:
	// case PHONE:
	// case RADIO:
	// case RANGE:
	// case SEARCH:
	// case SELECT:
	// case TIME:
	// case URL:
	// case WEEK:
	// default:

	// }

}

func SetAttributes(attrs templ.Attributes) InputOptsFunc {
	return func(p *InputOpts) {
		p.Attrs = attrs
	}
}

func WithOptions(options map[string]string) InputOptsFunc {

	return func(p *InputOpts) {

		Options := []option{}

		for k, v := range options {
			option := option{
				Value: v,
				Label: k,
			}
			Options = append(Options, option)
		}

		p.optionProps.Options = Options
	}
}

var _ = templruntime.GeneratedTemplate
