package alert

import "github.com/roborobs1023/templ_components/styles"

type Variant string

const (
	VariantDefault     Variant = "default"
	VariantDestructive Variant = "destructive"
)

func variantClasses(variant Variant) string {
    switch variant{
        case VariantDestructive:
        return "tc-border-destructive tc-text-destructive"
        default:
            return "tc-border-border tc-text-foreground"
    }
}

type Props struct {
    ID string
    Class string
    Attributes templ.Attributes
    Variant Variant
}

type TitleProps struct {
    ID string
    Class string
    Attributes templ.Attributes
}

type DescriptionProps struct {
	ID         string
	Class      string
	Attributes templ.Attributes
}

templ Alert(props ...Props) {
    {{var p Props}}
    if len(props) > 0 {
        {{ p = props[0] }}
    }
    <div
        if p.ID != "" {
            id={ p.ID }
        }
        class={ "tc-alert", p.Class }
        role="alert"
        { p.Attributes... }
    >
        { children... }
    </div>
}

templ Title(props ...TitleProps){
    {{var p TitleProps}}
    if len(props) > 0 {
		{{ p = props[0] }}
	}
    <h5
        if p.ID != "" {
			id={ p.ID }
		}

        class={ styles.FS_MD(), "tc-leading-none tc-tracking-tight", p.Class }
		{ p.Attributes... }
	>
		{ children... }
    </h5>
}

templ Description(props ...DescriptionProps) {
	{{ var p DescriptionProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
    <div
       if p.ID != "" {
			id={ p.ID }
		}
        class={ styles.FS_SM(), p.Class }
        { p.Attributes... } 
    >
        { children... }
    </div>
}
